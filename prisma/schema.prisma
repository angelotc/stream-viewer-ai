datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String   @id @map("_id")  // Using Twitch ID directly
    login         String   @unique
    displayName   String
    profileImage  String?
    email         String?  @unique
    isBotEnabled  Boolean  @default(true)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    session       Session?
    messages      Message[]
    subscriptions EventSubSubscription[]
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    userId       String   @unique
    user         User     @relation(fields: [userId], references: [id])
    accessToken  String
    refreshToken String   @unique
    expiresAt    DateTime
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
}

model EventSubSubscription {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    type      String   // e.g., 'stream.online'
    status    String   // e.g., 'enabled', 'disabled'
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId, type])
}

model Message {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    content   String
    type      MessageType
    metadata  Json?    // For additional data like username, confidence, duration
    createdAt DateTime @default(now())
}

enum MessageType {
    CHAT        // Twitch chat message
    TRANSCRIPT  // Streamer's speech transcript
    SYSTEM      // System events like stream online/offline
    BOT         // Bot's responses
}
